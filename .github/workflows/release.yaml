# Inspired from https://foojay.io/today/how-to-release-a-java-module-with-jreleaser-to-maven-central-with-github-actions/
name: Publish a new release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      nextVersion:
        description: 'Next version after release (-SNAPSHOT will be added automatically)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java setup
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Set release version
        run: mvn --batch-mode versions:set -DnewVersion=${{ github.event.inputs.version }}
      - name: Commit & Push changes
        uses: actions-js/push@v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: Releasing version ${{ github.event.inputs.version }}
      - name: Release with JReleaser
        uses: jreleaser/release-action@v2
        with:
          setup-java: false
        env:
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_TAG_NAME: ${{ github.event.inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set the next release version
        run: mvn --batch-mode versions:set -DnewVersion=${{ github.event.inputs.nextVersion }}
      - name: Commit & Push changes
        uses: actions-js/push@v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: Setting SNAPSHOT version ${{ github.event.inputs.nextVersion }}-SNAPSHOT
